name: CI/CD Pipeline

on:
  push:
    branches: [ main ]


jobs:

  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python all python version
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          architecture: x64

      - name: Install Python venv
        run: pip3 install virtualenv

      - name: Setup venv
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Activate and install dependencies into venv
        run: python -m venv venv && source venv/bin/activate &&
          pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Install app dependencies
        run: pip3 install -r requirements.txt

      - name: Build app and run tests
        run: . venv/bin/activate && pytest

      - name: Create zipfile archive of dependencies
        run: |
          cd ./venv/lib/python3.10/site-packages
          zip -r9 ../../../../pbapi.zip .

      - name: Add app to zipfile
        run: cd ./src && zip -g ../pbapi.zip -r .

      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: pbapi
          path: pbapi.zip


  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [ continuous-integration ]
    if: github.ref == 'refs/heads/main'
    steps:

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Download lambda pbapi.zip
        uses: actions/download-artifact@v2
        with:
          name: pbapi

      - name: Upload to S3
        run: aws s3 cp pbapi.zip s3://plant-based-api/pbapi.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy new lambda
        run: aws lambda update-function-code --function-name plant-based-api --s3-bucket plant-based-api --s3-key pbapi.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
